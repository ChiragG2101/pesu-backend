openapi: 3.0.0
info:
  title: People API
  version: 1.0.0
  description: API for managing people counts
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    CreatePeople:
      type: array
      items:
        type: object
        properties:
          type:
            type: string
            enum: [man, woman, boy, girl]
          count:
            type: integer
            minimum: 0
        required: ["type", "count"]
        additionalProperties: false
      minItems: 4
      uniqueItems: true
      contains:
        type: object
        properties:
          type:
            type: string
            enum: [man, woman, boy, girl]
        required: ["type"]
    People:
      type: object
      properties:
        type:
          type: string
          enum: [man, woman, boy, girl]
        count:
          type: integer
          minimum: 0
      required: ["type", "count"]
security:
  - bearerAuth: []
tags:
  - name: Auth
    description: Authentication related endpoints
  - name: People
    description: People management endpoints
  - name: Health
    description: To setup CRON JOB to keep the render server up and running

paths:
  /api/auth/login:
    post:
      tags:
        - Auth
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
      responses:
        "200":
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/people:
    get:
      tags:
        - People
      summary: Get all people
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalCount:
                    type: integer
                  people:
                    type: array
                    minItems: 4
                    uniqueItems: true
                    items:
                      $ref: "#/components/schemas/People"
                    contains:
                      $ref: "#/components/schemas/People"
    post:
      tags:
        - People
      summary: Create new people entry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                    enum: [man, woman, boy, girl]
                  count:
                    type: integer
              example:
                - type: man
                  count: 10
                - type: woman
                  count: 15
                - type: boy
                  count: 5
                - type: girl
                  count: 8
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                      enum: [man, woman, boy, girl]
                    count:
                      type: integer
  /health:
    get:
      tags:
        - Health
      summary: Health check
      responses:
        "200":
          description: API is UP & Running
          content:
            text/plain:
              schema:
                type: string
                example: "API is UP & Running"
